-- This script sets up the database schema for the Product Configurator API.

-- It's recommended to run this in a transaction.
BEGIN;

-- Enable the pgcrypto extension if you want to use UUIDs generated by the database.
CREATE EXTENSION IF NOT EXISTS "pgcrypto";

-- 1. ProductTemplate: Stores base product models (e.g., "Laptop Model X").
CREATE TABLE ProductTemplate (
    template_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    str_id VARCHAR(100) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL UNIQUE,
    base_price NUMERIC(10, 2) NOT NULL CHECK (base_price >= 0)
);

COMMENT ON TABLE ProductTemplate IS 'Stores base product models, like "Laptop Model X".';

-- 2. OptionCategory: Defines categories of options for a template (e.g., "CPU", "RAM").
CREATE TABLE OptionCategory (
    category_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    str_id VARCHAR(100) NOT NULL,
    template_id UUID NOT NULL REFERENCES ProductTemplate(template_id) ON DELETE CASCADE,
    name VARCHAR(255) NOT NULL,
    -- A category name must be unique for a given product template.
    UNIQUE (template_id, name)
);

COMMENT ON TABLE OptionCategory IS 'Defines categories of options for a template, like "CPU" or "RAM".';

-- 3. OptionChoice: Specific choices within a category (e.g., "Intel i7", "16GB DDR4").
CREATE TABLE OptionChoice (
    choice_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    str_id VARCHAR(100) NOT NULL,
    category_id UUID NOT NULL REFERENCES OptionCategory(category_id) ON DELETE CASCADE,
    name VARCHAR(255) NOT NULL,
    price_delta NUMERIC(10, 2) NOT NULL DEFAULT 0.00,
    -- A choice name must be unique within its parent category.
    UNIQUE (category_id, name),
    -- A choice str_id must be unique within its parent category.
    UNIQUE (category_id, str_id)
);

COMMENT ON TABLE OptionChoice IS 'Specific choices within a category, like "Intel i7" or "16GB DDR4".';

-- Define an ENUM type for the different types of compatibility rules.
CREATE TYPE rule_type_enum AS ENUM ('REQUIRES', 'INCOMPATIBLE_WITH');

-- 4. CompatibilityRule: Defines dependencies or incompatibilities between choices.
CREATE TABLE CompatibilityRule (
    rule_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    rule_type rule_type_enum NOT NULL,
    primary_choice_id UUID NOT NULL REFERENCES OptionChoice(choice_id) ON DELETE CASCADE,
    secondary_choice_id UUID NOT NULL REFERENCES OptionChoice(choice_id) ON DELETE CASCADE,
    -- A choice cannot have a compatibility rule with itself.
    CHECK (primary_choice_id <> secondary_choice_id)
);

COMMENT ON TABLE CompatibilityRule IS 'Defines dependencies or incompatibilities between choices, e.g., "Intel i7 REQUIRES Motherboard Z".';

COMMIT;